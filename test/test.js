// Generated by ToffeeScript 1.6.3
(function() {
  var Mongolian, assert, col, db, fs, mongoConnection, t, users;

  assert = require('assert');

  users = require('../lib/users.js');

  Mongolian = require('mongolian');

  mongoConnection = "mongo://localhost:27017/test_login";

  db = new Mongolian(mongoConnection);

  t = require('timed');

  fs = require('fs');

  col = db.collection('users');

  col.remove();

  users.config({
    connect: mongoConnection
  });

  describe('login-mocha', function() {
    describe('checkExists', function() {
      return it('should return true if user with that email exists or false if not', function(done) {
        var found, foundnow,
          _this = this;
        users.checkExists('bob@home.com', function() {
          found = arguments[0];
          assert.equal(found, false);
          t.reset();
          col.insert({
            name: 'bob',
            email: 'bob@home.com'
          }, function() {
            console.log("insert elapsed: " + (t.rounded()) + " ms");
            users.checkExists('bob@home.com', function() {
              foundnow = arguments[0];
              assert.equal(foundnow, true);
              col.remove();
              return done();
            });
          });
        });
      });
    });
    return describe('addNoEmail', function() {
      return it('should add a user to the configured db and collection with password hash', function(done) {
        var e, user,
          _this = this;
        users.addNoEmail('bob@home.com', 'bob', '123', function() {
          col.findOne({
            name: 'bob',
            email: 'bob@home.com'
          }, function() {
            e = arguments[0], user = arguments[1];
            assert.ok(user != null);
            assert.equal(user.email, 'bob@home.com');
            return done();
          });
        });
      });
    });
  });

}).call(this);
